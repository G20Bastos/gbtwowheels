<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>https://localhost:44493</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>da7adcc8-5990-4c36-b1c3-6488bec5f0d7</UserSecretsId>
    <DockerComposeProjectPath>../docker-compose.dcproj</DockerComposeProjectPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.19" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="7.0.18" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.18">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="7.0.12" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.18" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.18">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="7.0.18" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="7.0.18" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="7.5.2" />
    <PackageReference Include="BCrypt.Net" Version="0.1.0" />
    <PackageReference Include="RabbitMQ.Client" Version="6.8.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Remove="Models\" />
    <None Remove="Services\" />
    <None Remove="Data\" />
    <None Remove="Repositories\" />
    <None Remove="Helpers\" />
    <None Remove="ClientApp\src\app\register\" />
    <None Remove="Interfaces\" />
    <None Remove="ClientApp\src\app\access\" />
    <None Remove="Utils\" />
    <None Remove="ClientApp\src\app\main\" />
    <None Remove="ClientApp\src\app\model\" />
    <None Remove="ClientApp\src\app\services\" />
    <None Remove="Filters\" />
    <None Remove="ClientApp\src\app\filters\" />
    <None Remove="Logs\" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Models\" />
    <Folder Include="Services\" />
    <Folder Include="Data\" />
    <Folder Include="Repositories\" />
    <Folder Include="Helpers\" />
    <Folder Include="ClientApp\src\app\register\" />
    <Folder Include="Interfaces\" />
    <Folder Include="ClientApp\src\app\access\" />
    <Folder Include="Utils\" />
    <Folder Include="ClientApp\src\app\main\" />
    <Folder Include="ClientApp\src\app\model\" />
    <Folder Include="ClientApp\src\app\services\" />
    <Folder Include="Filters\" />
    <Folder Include="ClientApp\src\app\filters\" />
    <Folder Include="Logs\" />
  </ItemGroup>
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
  </Target>
  
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
